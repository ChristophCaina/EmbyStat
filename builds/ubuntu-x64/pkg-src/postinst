#!/bin/bash
set -e

NAME=embystat
DEFAULT_FILE=/etc/default/${NAME}

# Source Jellyfin default configuration
if [[ -f $DEFAULT_FILE ]]; then
  . $DEFAULT_FILE
fi

# Data directories for program data (cache, db), configs, and logs
PROGRAMDATA=${EMBYSTAT_DATA_DIRECTORY-/var/lib/$NAME}
CONFIGDATA=${EMBYSTAT_CONFIG_DIRECTORY-/etc/$NAME}
LOGDATA=${EMBYSTAT_LOG_DIRECTORY-/var/log/$NAME}

echo "---------------------------------------"
echo "---------------------------------------"
echo "---------------------------------------"
echo "POSTINST directories"
echo PROGRAMDATA
echo CONFIGDATA
echo LOGDATA
echo "---------------------------------------"
echo "---------------------------------------"
echo "---------------------------------------"

case "$1" in
  configure)
    # create embystat group if it does not exist
    if [[ -z "$(getent group embystat)" ]]; then
      addgroup --quiet --system embystat > /dev/null 2>&1
    fi
    # create embystat user if it does not exist
    if [[ -z "$(getent passwd embystat)"  ]]; then
      adduser --system --ingroup embystat --shell /bin/false embystat --no-create-home --home ${PROGRAMDATA} \
        --gecos "EmbyStat default user" > /dev/null 2>&1
    fi
    # ensure $PROGRAMDATA exists
    if [[ ! -d $PROGRAMDATA ]]; then
      mkdir $PROGRAMDATA
    fi
    # ensure $CONFIGDATA exists
    if [[ ! -d $CONFIGDATA ]]; then
      mkdir $CONFIGDATA
    fi
    # ensure $LOGDATA exists
    if [[ ! -d $LOGDATA ]]; then
      mkdir $LOGDATA
    fi
    # Ensure permissions are correct on all config directories
    chown -R embystat $PROGRAMDATA $CONFIGDATA $LOGDATA
    chgrp adm $PROGRAMDATA $CONFIGDATA $LOGDATA
    chmod 0750 $PROGRAMDATA $CONFIGDATA $LOGDATA

    chmod +x /usr/lib/embystat/restart.sh > /dev/null 2>&1 || true

    # Install embystat symlink into /usr/bin
    ln -sf /usr/lib/embystat/bin/EmbyStat /usr/bin/embystat

    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;
    *)
      echo "postinst called with unknown argument \`$1'" >&2
      exit 1
    ;;
esac

#DEBHELPER

if [[ -x "/usr/bin/deb-systemd-helper" ]]; then
  # Manual init script handling
  deb-systemd-helper unmask embystat.service >/dev/null || true
  # was-enabled defaults to true, so new installations run enable.
  if deb-systemd-helper --quiet was-enabled embystat.service; then
    # Enables the unit on first installation, creates new
    # symlinks on upgrades if the unit file has changed.
    deb-systemd-helper enable embystat.service >/dev/null || true
  else
    # Update the statefile to add new symlinks (if any), which need to be
    # cleaned up on purge. Also remove old symlinks.
    deb-systemd-helper update-state embystat.service >/dev/null || true
  fi
fi

# End automatically added section
# Automatically added by dh_installinit
if [[ "$1" == "configure" ]] || [[ "$1" == "abort-upgrade" ]]; then
  if [[ -d "/run/systemd/systemd" ]]; then
    systemctl --system daemon-reload >/dev/null || true
    deb-systemd-invoke start embystat >/dev/null || true
  elif [[ -x "/etc/init.d/embystat" ]] || [[ -e "/etc/init/embystat.conf" ]]; then
    update-rc.d embystat defaults >/dev/null
    invoke-rc.d embystat start || exit $?
  fi
fi
exit 0
